"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

var _default = /*#__PURE__*/function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {
    var body, updateMedusaService, strapiType, entryId, updated;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            body = req.body;
            updateMedusaService = req.scope.resolve("updateMedusaService"); // find Strapi entry type from body of webhook

            strapiType = body.type; // get the ID

            updated = {};
            _context.t0 = strapiType;
            _context.next = _context.t0 === "product" ? 8 : _context.t0 === "productVariant" ? 13 : _context.t0 === "region" ? 18 : _context.t0 === "productCategory" ? 24 : _context.t0 === "productCollection" ? 30 : 36;
            break;

          case 8:
            entryId = body.data.medusa_id;
            _context.next = 11;
            return updateMedusaService.sendStrapiProductToMedusa(body.data, entryId);

          case 11:
            updated = _context.sent;
            return _context.abrupt("break", 37);

          case 13:
            entryId = body.data.medusa_id;
            _context.next = 16;
            return updateMedusaService.sendStrapiProductVariantToMedusa(body.data, entryId);

          case 16:
            updated = _context.sent;
            return _context.abrupt("break", 37);

          case 18:
            console.log("region");
            entryId = body.data.medusa_id;
            _context.next = 22;
            return updateMedusaService.sendStrapiRegionToMedusa(body.data, entryId);

          case 22:
            updated = _context.sent;
            return _context.abrupt("break", 37);

          case 24:
            console.log("productCategory");
            entryId = body.data.medusa_id;
            _context.next = 28;
            return updateMedusaService.sendStrapiProductCategoryToMedusa(body.data, entryId);

          case 28:
            updated = _context.sent;
            return _context.abrupt("break", 37);

          case 30:
            console.log("productCollection");
            entryId = body.data.medusa_id;
            _context.next = 34;
            return updateMedusaService.sendStrapiProductCollectionToMedusa(body.data, entryId);

          case 34:
            updated = _context.sent;
            return _context.abrupt("break", 37);

          case 36:
            return _context.abrupt("break", 37);

          case 37:
            res.status(200).send(updated);
            _context.next = 43;
            break;

          case 40:
            _context.prev = 40;
            _context.t1 = _context["catch"](0);
            res.status(400).send("Webhook error: ".concat(_context.t1.message));

          case 43:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[0, 40]]);
  }));

  return function (_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

exports["default"] = _default;